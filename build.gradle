plugins {
    id 'java'
    id 'idea'
}

group = 'dev.seeight'
version = "1.0.0"

repositories {
    mavenCentral()
}

dependencies {
    githubImpl "various-utils"

    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation "org.jetbrains:annotations:24.0.1"
    implementation "commons-codec:commons-codec:1.18.0"
    implementation("org.apache.commons:commons-text:1.13.1")
    implementation "org.jsoup:jsoup:1.21.1"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.12.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.12.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

jar {
    archiveBaseName = "${project.name}"
}

sourceSets {
    version = null
}

javadoc {
    archivesBaseName = "${project.name}"
}

tasks.register('copyJar', Copy) {
    from jar, sourcesJar, javadocJar
    into "${System.getenv("dumb_libraries")}/${project.name}"
}

void githubImpl(String user = "c8ff", String tag = "latest", String libName) {
    def folder = System.getenv("dumb_libraries") ?: "./lib"
    def repoLoc = "https://github.com/${user}/${libName}/releases/download/${tag}"
    def libPath = "${folder}/${libName}/"
    def urls = [ "${repoLoc}/${libName}.jar", "${repoLoc}/${libName}-javadoc.jar", "${repoLoc}/${libName}-sources.jar" ]

    var libDir = file(libPath)
    if (!libDir.exists()) libDir.mkdirs()

    for (final def url in urls) {
        def filePath = new File(libDir, url.substring(url.lastIndexOf('/') + 1))
        var file = file(filePath)
        if (!file.exists()) {
            new URI(url).toURL().withInputStream { input -> file.withOutputStream { out -> out << input }}
        }
    }

    this.dependencies {
        implementation fileTree(dir: "${folder}/${libName}", include: ['*.jar'])
    }
}